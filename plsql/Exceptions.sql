--1. Implicit Exceptions/Names Exceptions/System Defined Exceptions/Pre-defined Exceptions

SET SERVEROUTPUT ON;
------------------------------------------------------------------------------------
--NO DATA FOUND EXCEPTION

DECLARE
V_NAME EMPLOYEETABLE.NAME%TYPE;

BEGIN
SELECT NAME INTO V_NAME
FROM EMPLOYEETABLE
WHERE ID = 3;
DBMS_OUTPUT.PUT_LINE(V_NAME);

EXCEPTION
--WHEN NO_DATA_FOUND THEN
--DBMS_OUTPUT.PUT_LINE('NO DATA FOUND FOR THIS ID');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SQLCODE: '|| SQLCODE);
DBMS_OUTPUT.PUT_LINE('SQLERRM: '|| SQLERRM);

END;

-----------------------------------------------------------------------------------------
--DIVISOR IS EQUAL TO ZERO EXCEPTION

DECLARE
V_TOTAL_QTY NUMBER := 101;
V_COUNT_OF_PERSON NUMBER := 0;
V_PER_DISTRIB_QTY NUMBER;

BEGIN
V_PER_DISTRIB_QTY := V_TOTAL_QTY / V_COUNT_OF_PERSON;

EXCEPTION

--WHEN ZERO_DIVIDE THEN
--DBMS_OUTPUT.PUT_LINE('PER PERSON DISTRIBUTED QUANTITY IS ZERO');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SQLCODE: '|| SQLCODE);
DBMS_OUTPUT.PUT_LINE('SQLERRM: '|| SQLERRM);

END;

------------------------------------------------------------------------------------------
--NUMERIC OR VALUE ERROR

DECLARE
V_NAME VARCHAR2(5);

BEGIN
SELECT NAME INTO V_NAME
FROM EMPLOYEETABLE 
WHERE ROWNUM = 1;

EXCEPTION

--WHEN VALUE_ERROR THEN
--DBMS_OUTPUT.PUT_LINE('BUFFER SIZE IS TOO SMALL');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SQLCODE: '|| SQLCODE);
DBMS_OUTPUT.PUT_LINE('SQLERRM: '|| SQLERRM);

END;

-----------------------------------------------------------------------------------------

DECLARE
V_NAME NUMBER;

BEGIN
SELECT NAME INTO V_NAME
FROM EMPLOYEETABLE 
WHERE ROWNUM = 1;

EXCEPTION

--WHEN VALUE_ERROR THEN
--DBMS_OUTPUT.PUT_LINE('WRONG VARIABLE DATATYPE');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('SQLCODE: '|| SQLCODE);
DBMS_OUTPUT.PUT_LINE('SQLERRM: '|| SQLERRM);

END;


--========================================================================================================

--2. USER DEFINED EXCEPTIONS

--RAISE STATEMENT

DECLARE 
V_AGE NUMBER := 16;
NOT_VALID_AGE EXCEPTION;

BEGIN
IF V_AGE < 18 THEN
RAISE NOT_VALID_AGE;
END IF;

EXCEPTION WHEN NOT_VALID_AGE THEN
DBMS_OUTPUT.PUT_LINE('YOU ARE NOT AUTHORIZED FOR VOTE YOU ARE BELOW 18 YEARS');

END;

----------------------------------------------------------------------------------------------------
--RAISE_APPLICATION_ERROR

DECLARE 
V_AGE NUMBER := 16;

BEGIN
IF V_AGE < 18 THEN
RAISE_APPLICATION_ERROR(-20008, 'YOU ARE NOT AUTHORIZED FOR VOTE YOU ARE BELOW 18 YEARS');
END IF;

EXCEPTION WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE(SQLERRM);

END;

------------------------------------------------------------------------------------------------------
--ZERO DIVIDE ERROR

DECLARE
V_TOTAL_QTY NUMBER := 101;
V_COUNT_OF_PERSON NUMBER := 0;
V_PER_DISTRIB_QTY NUMBER;

ZERO_DIVISER EXCEPTION;

BEGIN
IF V_COUNT_OF_PERSON = 0 THEN
RAISE ZERO_DIVISER;
ELSE
V_PER_DISTRIB_QTY := V_TOTAL_QTY / V_COUNT_OF_PERSON;
END IF;

EXCEPTION

WHEN ZERO_DIVISER THEN
DBMS_OUTPUT.PUT_LINE('PER PERSON DISTRIBUTED QUANTITY IS ZERO');

END;